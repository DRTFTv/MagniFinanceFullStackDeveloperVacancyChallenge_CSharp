// <auto-generated />
using System;
using Backend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(UniversityDbContext))]
    [Migration("20230112021334_UpateDatabase")]
    partial class UpateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Backend.Models.Courses.CoursesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("courses_tb");
                });

            modelBuilder.Entity("Backend.Models.Grades.GradesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("grades_tb");
                });

            modelBuilder.Entity("Backend.Models.Students_Subjects.Students_SubjectsModel", b =>
                {
                    b.Property<int>("registrationNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("registrationNumber"), 1L, 1);

                    b.Property<int?>("GradeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("GradesNavigationId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("StudentsNavigationId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("SubjectsNavigationId")
                        .HasColumnType("int");

                    b.HasKey("registrationNumber");

                    b.HasIndex("GradesNavigationId");

                    b.HasIndex("StudentsNavigationId");

                    b.HasIndex("SubjectsNavigationId");

                    b.ToTable("students_subjects_tb");
                });

            modelBuilder.Entity("Backend.Models.Students.StudentsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("students_tb");
                });

            modelBuilder.Entity("Backend.Models.Subjects.SubjectsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CourseId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("CoursesNavigationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("TeacherId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("TeachersNavigationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoursesNavigationId");

                    b.HasIndex("TeachersNavigationId");

                    b.ToTable("subjects_tb");
                });

            modelBuilder.Entity("Backend.Models.Teachers.TeachersModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("teachers_tb");
                });

            modelBuilder.Entity("Backend.Models.Students_Subjects.Students_SubjectsModel", b =>
                {
                    b.HasOne("Backend.Models.Grades.GradesModel", "GradesNavigation")
                        .WithMany()
                        .HasForeignKey("GradesNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Students.StudentsModel", "StudentsNavigation")
                        .WithMany()
                        .HasForeignKey("StudentsNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Subjects.SubjectsModel", "SubjectsNavigation")
                        .WithMany()
                        .HasForeignKey("SubjectsNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GradesNavigation");

                    b.Navigation("StudentsNavigation");

                    b.Navigation("SubjectsNavigation");
                });

            modelBuilder.Entity("Backend.Models.Subjects.SubjectsModel", b =>
                {
                    b.HasOne("Backend.Models.Courses.CoursesModel", "CoursesNavigation")
                        .WithMany()
                        .HasForeignKey("CoursesNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Teachers.TeachersModel", "TeachersNavigation")
                        .WithMany()
                        .HasForeignKey("TeachersNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoursesNavigation");

                    b.Navigation("TeachersNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
